parameters:
- name: 'TASK_NAME'
  default: 'TASK_NOT_FOUND'
  type: string
- name: 'GITHUB_AUTH'
  default: 'token'
  type: string
- name: 'GIT_COMMIT'
  default: 'sha1'
  type: string
- name: 'BUILDID'
  default: '0'
  type: string
- name: 'ACCESS_TOKEN'
  default: '0'
  type: string

steps:
- powershell: |
   $url = " https://dev.azure.com/thierrychantier/evaluation for build/_apis/build/builds/${{ parameters.BUILDID }}/timeline?api-version=5.1"
   $result = Invoke-RestMethod -Uri $url -Headers @{   
    Authorization = "Bearer ${{ parameters.ACCESS_TOKEN }}"
   } -Method Get
   Write-Host $result.records
   $task = $result.records | where {$_.name -eq '${{ parameters.TASK_NAME }}'}
   $taskStatus = $task.result
   Write-Host "##vso[task.setvariable variable=taskStatus;isOutput=true]$taskStatus"
   Write-Host $status
  displayName: 'Get Task ${{ parameters.TASK_NAME }} Status'
  name: SET_TASK_STATUS_${{ parameters.TASK_NAME }}
  condition: succeededOrFailed()
- powershell: |
   $github_status = "$(SET_TASK_STATUS_${{ parameters.TASK_NAME }}.TASKSTATUS)"
   if ($github_status -eq "succeeded") {
    $github_status = "success"
   } else {
    $github_status = "failure"
   }
   $url = "https://api.github.com/repos/victor-gallet/pipelines-java/statuses/${{Â parameters.GIT_COMMIT }}"
   $result = Invoke-RestMethod -Uri $url -Headers @{   
    Authorization = "token ${{ parameters.GITHUB_AUTH }}"
   } -Body (@{"state"="$github_status";"description"="${{ parameters.TASK_NAME }}";"context"="${{ parameters.TASK_NAME }}";}|ConvertTo-Json) -Method POST
  condition: succeededOrFailed()
  displayName: 'Github Status ${{ parameters.TASK_NAME }}'